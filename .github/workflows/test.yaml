name: "Test"

on:
  workflow_dispatch:
  schedule:
    - cron: "18 18 * * 1,3,5"
  push:
    branches: ["**"]
    paths:
      - "dist/**"
      - "src/**"
      - ".github/workflows/test.yaml"
      - "Dockerfile"
      - "package*.json"
      - "requirements.txt"
      - "action.yaml"

env:
  PRIVATE_IMAGE: ${{ vars.PRIVATE_IMAGE || 'smashedr/alpine-private:latest' }}

jobs:
  test:
    name: "Test"
    if: ${{ !contains(github.event.head_commit.message, '#notest') }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    concurrency:
      group: test
      cancel-in-progress: true

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      #- name: "Debug event.json"
      #  run: |
      #    cat "${GITHUB_EVENT_PATH}"

      - name: "1: Write YAML"
        if: ${{ always() }}
        uses: teunmooij/yaml@v1
        with:
          data: '{"version":"3.8","services":{"alpine":{"image":"alpine:latest","command":"tail -f /dev/null"}}}'
          to-file: "docker-compose.yaml"

      - name: "1: Test Password"
        if: ${{ always() }}
        uses: ./
        with:
          name: test_stack-deploy
          file: docker-compose.yaml
          host: ${{ secrets.DOCKER_HOST }}
          port: ${{ secrets.DOCKER_PORT }}
          user: ${{ secrets.DOCKER_USER }}
          pass: ${{ secrets.DOCKER_PASS }}
          #ssh_key: "${{ secrets.DOCKER_SSH_KEY }}"

      - name: "2: Write YAML"
        if: ${{ always() && !github.event.act }}
        uses: teunmooij/yaml@v1
        with:
          data: '{"version":"3.8","services":{"alpine":{"image":"${{ env.PRIVATE_IMAGE }}","command":"tail -f /dev/null"}}}'
          to-file: "docker-compose.yaml"

      - name: "2: Test SSH and Auth"
        if: ${{ always() && !github.event.act }}
        uses: ./
        with:
          name: test_stack-deploy
          file: docker-compose.yaml
          host: ${{ secrets.DOCKER_HOST }}
          port: ${{ secrets.DOCKER_PORT }}
          user: ${{ secrets.DOCKER_USER }}
          #pass: ${{ secrets.DOCKER_PASS }}
          ssh_key: "${{ secrets.DOCKER_SSH_KEY }}"
          registry_user: ${{ vars.DOCKER_HUB_USER }}
          registry_pass: ${{ secrets.DOCKER_HUB_PASS }}
          summary: false

      - name: "Schedule Failure Notification"
        if: ${{ failure() && github.event_name == 'schedule' }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
